###########
# ðŸ“œ Poetry
###########
[tool.poetry]
name = "{{ cookiecutter.package_name }}"
version = "{{ cookiecutter.version }}"
description = "{{ cookiecutter.project_short_description }}"
authors = ["{{ cookiecutter.full_name.replace('\"', '\\\"') }} <{{ cookiecutter.email }}>"]
license = "UNLICENSED"
classifiers = ["Private :: Do Not Upload"]
packages = [
  { include = "{{ cookiecutter.package_name }}", from = "{{ cookiecutter.package_name }}" },
  # Add more packages here, e.g.
  # { include = "module_name", from = "{{ cookiecutter.package_name }}" },
]

[tool.poetry.dependencies]
python = "^{{ cookiecutter.python_version }}"
# Everything below here is alphabetically sorted

[tool.poetry.dev-dependencies]
# Everything below here is alphabetically sorted
black = "^22.8.0"
detect-secrets = "1.2.0"
flake8 = "^4.0.1"
flake8-docstrings = "^1.6.0"
flake8-eradicate = "^1.3.0"
flake8-fixme = "^1.1.1"
flake8-implicit-str-concat = "^0.3.0"
flake8-no-pep420 = "^2.3.0"
flake8-print = "^5.0.0"
flake8-return = "^1.1.3"
ipdb = "^0.13.9"
isort = "^5.10.1"
jupyter-black = "^0.3.1"
pip-audit = "^2.4.4"
poetryup = "^0.8.2"
pre-commit = "^2.20.0"
pylint = "^2.15.2"
pytest = "^7.1.3"
{% if cookiecutter.use_towncrier == 'y' -%}
towncrier = "^21.9.0"{% endif %}

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

############
# âœ… Linters
############
[tool.black]
line-length = {{ cookiecutter.line_length }}
target-version = ["py{{ "".join(cookiecutter.python_version.split('.')[:2]) }}"]

[tool.isort]
profile = "black"
line_length = {{ cookiecutter.line_length }}
default_section = "THIRDPARTY"
known_first_party = ["{{ cookiecutter.package_name }}"]
sections = "FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER"
add_imports = "from __future__ import annotations"

[tool.pylint.MASTER]
ignore-paths = [".git"]
load-plugins = []

[tool.pylint."MESSAGES CONTROL"]
enable = "all"
max-module-lines = 2000
max-line-length = {{ cookiecutter.line_length }}
max-locals = 50
min-similarity-lines = 150
max-statements = 89
max-args = 22
max-branches = 17
# good-names = []
# disable = []
logging-format-style = "new"

##############
# ðŸ“£ Towncrier
##############
{% if cookiecutter.use_towncrier == 'y' -%}
[tool.towncrier]
package = "{{ cookiecutter.package_name }}"
package_dir = "."
filename = "CHANGELOG.md"
directory = ".changelog/"
template = ".changelog/template.md"
title_format = "## [{version}] - {project_date}"
issue_format = "[#{issue}]({{ cookiecutter.issue_url }}{issue})"
start_string = "<!-- TOWNCRIER -->\n"
underlines = ["", ""]

# .added for new features
# .changed for changes in existing functionality
# .deprecated for soon-to-be removed features
# .removed for now removed features
# .fixed for any bug fixes
# .security in case of vulnerabilities
# .analysis for data analyses
# .docs for documentation improvements
# .maintenance for maintenance tasks & upgrades
[[tool.towncrier.type]]
directory = "added"
name = "Added"
showcontent = true

[[tool.towncrier.type]]
directory = "changed"
name = "Changed"
showcontent = true

[[tool.towncrier.type]]
directory = "deprecated"
name = "Deprecated"
showcontent = true

[[tool.towncrier.type]]
directory = "removed"
name = "Removed"
showcontent = true

[[tool.towncrier.type]]
directory = "fixed"
name = "Bug Fixes"
showcontent = true

[[tool.towncrier.type]]
directory = "security"
name = "Security"
showcontent = true

[[tool.towncrier.type]]
directory = "analysis"
name = "Analyses"
showcontent = true

[[tool.towncrier.type]]
directory = "docs"
name = "Improved Documentation"
showcontent = true

[[tool.towncrier.type]]
directory = "maintenance"
name = "Maintenance Changes"
showcontent = true
{% endif %}
